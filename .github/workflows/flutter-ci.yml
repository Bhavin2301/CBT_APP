name: Flutter CI/CD

on:
  push:
    branches:
      - main  # Runs workflow on push to 'main' branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.16.0  
          channel: stable

      - name: Clean Project (Prevent Cache Issues)
        run: flutter clean

      - name: Install Dependencies
        run: flutter pub get

      - name: Extract App Version
        run: |
          echo "Extracting app version from pubspec.yaml"
          APP_VERSION=$(grep 'version:' pubspec.yaml | awk '{print $2}')
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_ENV

      - name: **Delete Existing GitHub Release & Tag (If Exists)**
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}  # âœ… Use a GitHub Personal Access Token (PAT)
        continue-on-error: true
        run: |
          echo "Checking for existing release..."
          if gh release view "v${{ env.APP_VERSION }}" >/dev/null 2>&1; then
            echo "Deleting existing release..."
            gh release delete "v${{ env.APP_VERSION }}" --yes
          fi

          echo "Checking for existing tag..."
          if git rev-parse "v${{ env.APP_VERSION }}" >/dev/null 2>&1; then
            echo "Deleting existing tag..."
            git push --delete origin "v${{ env.APP_VERSION }}"
            git tag -d "v${{ env.APP_VERSION }}"
          fi

      - name: Build APK
        run: flutter build apk --release

      - name: Rename APK with Version
        run: mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/app-v${{ env.APP_VERSION }}.apk

      - name: Upload APK to AWS S3
        env:
          S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
        run: |
          aws s3 cp build/app/outputs/flutter-apk/app-v${{ env.APP_VERSION }}.apk s3://$S3_BUCKET_NAME/app-v${{ env.APP_VERSION }}.apk --acl public-read

      - name: **Create GitHub Release (After Deleting Old One)**
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ env.APP_VERSION }}
          name: Release v${{ env.APP_VERSION }}
          body: "ðŸš€ New release available! [Download APK](https://${{ secrets.S3_BUCKET_NAME }}.s3.amazonaws.com/app-v${{ env.APP_VERSION }}.apk)"
          draft: false
          prerelease: false
          token: ${{ secrets.GH_PAT }}  # âœ… Use a GitHub PAT
